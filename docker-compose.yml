version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://tprm_user:tprm_password@postgres:5432/tprm_db
      - SECRET_KEY=your-secret-key-change-in-production
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}
      - AZURE_STORAGE_ACCOUNT_KEY=${AZURE_STORAGE_ACCOUNT_KEY}
      - AZURE_APPLICATION_INSIGHTS_CONNECTION_STRING=${AZURE_APPLICATION_INSIGHTS_CONNECTION_STRING}
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - tprm-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - tprm-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tprm_db
      - POSTGRES_USER=tprm_user
      - POSTGRES_PASSWORD=tprm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - tprm-network

  # Redis for Dapr state store and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tprm-network

  # Dapr sidecar for backend
  dapr-sidecar:
    image: "daprio/daprd:edge"
    command: [
      "./daprd",
      "-app-id", "tprm-backend",
      "-app-port", "8000",
      "-dapr-http-port", "3500",
      "-dapr-grpc-port", "50001",
      "-components-path", "/components",
      "-config", "/config/config.yaml"
    ]
    depends_on:
      - backend
    volumes:
      - ./dapr/components.yaml:/components/components.yaml
      - ./dapr/config.yaml:/config/config.yaml
    networks:
      - tprm-network

  # Zipkin for distributed tracing
  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=memory
    networks:
      - tprm-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - tprm-network

volumes:
  postgres_data:
  redis_data:

networks:
  tprm-network:
    driver: bridge 